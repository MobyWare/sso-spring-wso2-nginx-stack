apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dev.oauth.wso2.sso
  annotations:
    emmie-update: dev.oauth.wso2.sso
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: oauth
    spec:
      volumes:
        - name: logs
          emptyDir: {}
        - name: wso2-certs
          secret:
            secretName: wso2-certs          
        - name: cloudsql-oauth-credentials
          secret:
            secretName: cloudsql-oauth-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir:            
      containers:
      - name: wso2
        image: gcr.io/sso-wso2-intro-3-tier/wso2/oauth_migrations:1.0
        imagePullPolicy: Always
        ports:
          - name: oauth
            containerPort: 9443
        volumeMounts:
        - mountPath: /opt/wso2/repository/logs
          name: logs
        - name: wso2-certs
          mountPath: /opt/wso2/repository/resources/security
        resources:
          limits:
            cpu: 2000m
            memory: 2048Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        env:
          - name: USER
            value: wso2is
          - name: PASSWORD
            value: wso2is
          - name: SERVER
            valueFrom:
              configMapKeyRef:
                name: wso2-config
                key: dev.oauthdb.servername          
          - name: DATABASENAME
            valueFrom:
              configMapKeyRef:
                name: wso2-config
                key: dev.oauthdb.databasename    
          - name: PUBLICURL
            valueFrom:
              configMapKeyRef:
                name: wso2-config
                key: dev.oauth.publicurl
      - image: b.gcr.io/cloudsql-docker/gce-proxy:1.05
        name: cloudsql-proxy
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-instances=sso-wso2-intro-3-tier:us-east1:wso2db=tcp:3306",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-oauth-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: cloudsql
            mountPath: /cloudsql                                                  